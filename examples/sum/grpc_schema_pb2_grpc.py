# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_schema_pb2 as grpc__schema__pb2


class gRPCStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServerResponse = channel.unary_unary(
            '/grpc.gRPC/GetServerResponse',
            request_serializer=grpc__schema__pb2.Sum.SerializeToString,
            response_deserializer=grpc__schema__pb2.SumResponse.FromString,
        )


class gRPCServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetServerResponse(self, request, context):
        """A simple RPC.

        Obtains the SumResponse at a given position.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_gRPCServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetServerResponse': grpc.unary_unary_rpc_method_handler(
            servicer.GetServerResponse,
            request_deserializer=grpc__schema__pb2.Sum.FromString,
            response_serializer=grpc__schema__pb2.SumResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpc.gRPC', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class gRPC(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetServerResponse(request,
                          target,
                          options=(),
                          channel_credentials=None,
                          call_credentials=None,
                          insecure=False,
                          compression=None,
                          wait_for_ready=None,
                          timeout=None,
                          metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gRPC/GetServerResponse',
                                             grpc__schema__pb2.Sum.SerializeToString,
                                             grpc__schema__pb2.SumResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
